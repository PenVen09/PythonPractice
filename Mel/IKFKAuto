/*
[ONLY FOR PRACTICE]
First time learning Mel so i hardcoded a lot of thing.
*/

global proc cgTkSetupLeg(string $legSideLong)
{
    //command
    string $legSide;
    
    if ($legSideLong == "left")
    $legSide ="l";
    
    if($legSideLong == "right")
    $legSide = "r";
    
    $footAxis = "Z";
    $isFootNegative = -1;
    
    //ORIENT Joint
    select -r ($legSide + "Hip");
    joint -e -oj xyz -ch -zso;
    
    //Duplicate Joint
    select -r ($legSide + "Hip");
    duplicate -rr;
    duplicate -rr;
    
    rename ($legSide + "Hip1") ($legSide + "HipFK");
    rename ($legSide + "HipFK|" + $legSide + "Knee") ($legSide + "KneeFK");
    rename ($legSide + "HipFK|" + $legSide + "KneeFK|" + $legSide + "Ankle") ($legSide + "AnkleFK");
    rename ($legSide + "HipFK|" + $legSide + "KneeFK|" + $legSide + "AnkleFK|" + $legSide + "Ball") ($legSide + "BallFK");
    rename ($legSide + "HipFK|" + $legSide + "KneeFK|" + $legSide + "AnkleFK|" + $legSide + "BallFK|" + $legSide + "Toe") ($legSide + "ToeFK");
    
    rename ($legSide + "Hip2") ($legSide + "HipIK");
    rename ($legSide + "HipIK|" + $legSide + "Knee") ($legSide + "KneeIK");
    rename ($legSide + "HipIK|" + $legSide + "KneeIK|" + $legSide + "Ankle") ($legSide + "AnkleIK");
    rename ($legSide + "HipIK|" + $legSide + "KneeIK|" + $legSide + "AnkleIK|" + $legSide + "Ball") ($legSide + "BallIK");
    rename ($legSide + "HipIK|" + $legSide + "KneeIK|" + $legSide + "AnkleIK|" + $legSide + "BallIK|" + $legSide + "Toe") ($legSide + "ToeIK");
    
    //Orient Joints
    select -r ($legSide + "HipFK");
    select -tgl ($legSide + "HipIK");
    select -tgl ($legSide + "Hip");
    orientConstraint -offset 0 0 0 -weight 1;
    
    select -r ($legSide + "KneeFK");
    select -tgl ($legSide + "KneeIK");
    select -tgl ($legSide + "Knee");
    orientConstraint -offset 0 0 0 -weight 1;
    
    select -r ($legSide + "AnkleFK");
    select -tgl ($legSide + "AnkleIK");
    select -tgl ($legSide + "Ankle");
    orientConstraint -offset 0 0 0 -weight 1;
    
    select -r ($legSide + "BallFK");
    select -tgl ($legSide + "BallIK");
    select -tgl ($legSide + "Ball");
    orientConstraint -offset 0 0 0 -weight 1;
    
    setAttr ($legSide + "Hip_orientConstraint1.interpType") 2;
    setAttr ($legSide + "Knee_orientConstraint1.interpType") 2;
    setAttr ($legSide + "Ankle_orientConstraint1.interpType") 2;
    setAttr ($legSide + "Ball_orientConstraint1.interpType") 2;
    
    addAttr -ln toeTap -k 1 -at double -min -10 -max 10 -dv 0 ("|" + $legSideLong + "FootControl");
    addAttr -ln peelHeel -k 1 -at double -min 0 -max 10 -dv 0 ("|" + $legSideLong + "FootControl");
    addAttr -ln standTip -k 1 -at double -min 0 -max 10 -dv 0 ("|" + $legSideLong + "FootControl");
    addAttr -ln twistHeel -k 1 -at double -min -10 -max 10 -dv 0 ("|" + $legSideLong + "FootControl");
    addAttr -ln twistToe -k 1 -at double -min -10 -max 10 -dv 0 ("|" + $legSideLong + "FootControl");
    addAttr -ln ikFk -k 1 -at double -min 0 -max 1 -dv 0 ("|" + $legSideLong + "FootControl");
    
    shadingNode -au reverse -n ("reverse_" + $legSide + "_Hip");
    connectAttr ($legSideLong + "FootControl.ikFk") ($legSide + "Hip_orientConstraint1." + $legSide + "HipFKW0");
    connectAttr ($legSideLong + "FootControl.ikFk") ("reverse_" + $legSide + "_Hip.inputX");
    connectAttr ("reverse_" + $legSide + "_Hip.outputX") ($legSide + "Hip_orientConstraint1." + $legSide + "HipIKW1");
    
    shadingNode -au reverse -n ("reverse_" + $legSide + "_Knee");
    connectAttr ($legSideLong + "FootControl.ikFk") ($legSide + "Knee_orientConstraint1." + $legSide + "KneeFKW0");
    connectAttr ($legSideLong + "FootControl.ikFk") ("reverse_" + $legSide + "_Knee.inputX");
    connectAttr ("reverse_" + $legSide + "_Knee.outputX") ($legSide + "Knee_orientConstraint1." + $legSide + "KneeIKW1");
    
    shadingNode -au reverse -n ("reverse_" + $legSide + "_Ankle");
    connectAttr ($legSideLong + "FootControl.ikFk") ($legSide + "Ankle_orientConstraint1." + $legSide + "AnkleFKW0");
    connectAttr ($legSideLong + "FootControl.ikFk") ("reverse_" + $legSide + "_Ankle.inputX");
    connectAttr ("reverse_" + $legSide + "_Ankle.outputX") ($legSide + "Ankle_orientConstraint1." + $legSide + "AnkleIKW1");
    
    shadingNode -au reverse -n ("reverse_" + $legSide + "_Ball");
    connectAttr ($legSideLong + "FootControl.ikFk") ($legSide + "Ball_orientConstraint1." + $legSide + "BallFKW0");
    connectAttr ($legSideLong + "FootControl.ikFk") ("reverse_" + $legSide + "_Ball.inputX");
    connectAttr ("reverse_" + $legSide + "_Ball.outputX") ($legSide + "Ball_orientConstraint1." + $legSide + "BallIKW1");
    
    select -r ($legSide + "HipIK.rotatePivot");
    select -add ($legSide + "AnkleIK.rotatePivot");
    ikHandle -n ($legSide + "LegIk") -sol ikRPsolver -s sticky;
    
    select -r ($legSide + "BallIK.rotatePivot");
    select -add ($legSide + "ToeIK.rotatePivot");
    ikHandle -n ($legSide + "ToeIk") -sol ikSCsolver -s off;
    
    
    select -r ($legSide + "AnkleIK.rotatePivot");
    select -add ($legSide + "BallIK.rotatePivot");
    ikHandle -n ($legSide + "BallIk") -sol ikSCsolver -s off;
    
    
    select -r ($legSide + "ToeIk") ($legSide + "BallIk");
    group -n ($legSide + "ToeTapGroup");
    
    select -r ($legSide + "LegIk");
    group -n ($legSide + "PeelHeelGroup");
    
    select -r ($legSide + "ToeTapGroup") ($legSide + "PeelHeelGroup");
    group -n ($legSide + "ToePivotGroup");
    
    group -n ($legSide + "HeelPivotGroup");
    
    group -n ($legSide + "FootGroup");
    
    float $worldSpaceOfJoint[];
    
    $worldSpaceOfJoint = `xform -q -ws -rp ($legSide + "Ball")`;   
    move -absolute $worldSpaceOfJoint[0] $worldSpaceOfJoint[1] $worldSpaceOfJoint[2] ($legSide + "ToeTapGroup.scalePivot") ($legSide + "ToeTapGroup.rotatePivot");

    $worldSpaceOfJoint= `xform -q -ws -rp ($legSide + "Ball")`;
    move -a $worldSpaceOfJoint[0] $worldSpaceOfJoint[1] $worldSpaceOfJoint[2] ($legSide + "PeelHeelGroup.scalePivot")($legSide + "PeelHeelGroup.rotatePivot") ;
     
    $worldSpaceOfJoint= `xform -q -ws -rp ($legSide + "Toe")`;
    move -a $worldSpaceOfJoint[0] $worldSpaceOfJoint[1] $worldSpaceOfJoint[2] ($legSide + "ToePivotGroup.scalePivot")($legSide + "ToePivotGroup.rotatePivot") ;
     
    $worldSpaceOfJoint= `xform -q -ws -rp ($legSide + "Ankle")`;
    move -a $worldSpaceOfJoint[0] $worldSpaceOfJoint[1] $worldSpaceOfJoint[2] ($legSide + "HeelPivotGroup.scalePivot")($legSide + "HeelPivotGroup.rotatePivot") ;
     
    $worldSpaceOfJoint= `xform -q -ws -rp ($legSide + "Ball")`;
    move -a $worldSpaceOfJoint[0] $worldSpaceOfJoint[1] $worldSpaceOfJoint[2] ($legSide + "FootGroup.scalePivot") ($legSide + "FootGroup.rotatePivot");


    group -n ($legSideLong + "FootControlAlign") ($legSideLong + "FootControl");
    
    delete `orientConstraint ($legSide + "Ball") ($legSideLong+ "FootControlAlign")`;
    delete `pointConstraint ($legSide + "Ball") ($legSideLong + "FootControlAlign")`;
    
    parent ($legSide + "FootGroup") ($legSideLong + "FootControl");
    
    select -r ($legSideLong + "FootControl");
    FreezeTransformations;
    
    setAttr ($legSide + "LegIk.poleVectorX") 0;
    setAttr ($legSide + "LegIk.poleVectorY") 0;
    setAttr ($legSide + "LegIk.poleVectorZ") 0;
    
    //Driven key
    
    setAttr ($legSideLong + "FootControl.toeTap") 0;
    setAttr ($legSide + "ToeTapGroup.rotate" + $footAxis) 0;
    setDrivenKeyframe -cd ($legSideLong + "FootControl.toeTap")($legSide + "ToeTapGroup.rotate" + $footAxis);
     
    setAttr ($legSideLong + "FootControl.toeTap") 10;
    setAttr ($legSide + "ToeTapGroup.rotate" + $footAxis)(90*$isFootNegative);
    setDrivenKeyframe -cd ($legSideLong + "FootControl.toeTap")($legSide + "ToeTapGroup.rotate" + $footAxis);
     
    setAttr ($legSideLong + "FootControl.toeTap") -10;
    setAttr ($legSide + "ToeTapGroup.rotate" + $footAxis)(-90*$isFootNegative);
    setDrivenKeyframe -cd ($legSideLong + "FootControl.toeTap")($legSide + "ToeTapGroup.rotate" + $footAxis);
    setAttr ($legSideLong + "FootControl.toeTap") 0;
    
    
    setAttr ($legSideLong + "FootControl.peelHeel") 0;
    setAttr ($legSide + "PeelHeelGroup.rotate" + $footAxis) 0;
    setDrivenKeyframe -cd ($legSideLong + "FootControl.peelHeel")($legSide + "PeelHeelGroup.rotate" + $footAxis);
     
    setAttr ($legSideLong + "FootControl.peelHeel") 10;
    setAttr ($legSide + "PeelHeelGroup.rotate" + $footAxis)(90*$isFootNegative);
    setDrivenKeyframe -cd ($legSideLong + "FootControl.peelHeel")($legSide + "PeelHeelGroup.rotate" + $footAxis);
     
    setAttr ($legSideLong + "FootControl.peelHeel") -10;
    setAttr ($legSide + "PeelHeelGroup.rotate" + $footAxis)(-90*$isFootNegative);
    setDrivenKeyframe -cd ($legSideLong + "FootControl.peelHeel")($legSide + "PeelHeelGroup.rotate" + $footAxis);
    setAttr ($legSideLong + "FootControl.peelHeel") 0;
    
    
    setAttr ($legSideLong + "FootControl.standTip") 0;
    setAttr ($legSide + "ToePivotGroup.rotate" + $footAxis) 0;
    setDrivenKeyframe -cd ($legSideLong + "FootControl.standTip")($legSide + "PeelHeelGroup.rotate" + $footAxis);
     
    setAttr ($legSideLong + "FootControl.standTip") 10;
    setAttr ($legSide + "ToePivotGroup.rotate" + $footAxis)(90*$isFootNegative);
    setDrivenKeyframe -cd ($legSideLong + "FootControl.standTip")($legSide + "ToePivotGroup.rotate" + $footAxis);
     
    setAttr ($legSideLong + "FootControl.standTip") 0;
    
    

    print ("The " + $legSideLong + " leg has been setup. \n");
}

cgTkSetupLeg("left");
